"use strict";(this.webpackChunkWaline=this.webpackChunkWaline||[]).push([[478],{478:(e,n,t)=>{t.r(n),t.d(n,{MD:()=>k,createMdParser:()=>o});var l=t(948),a=t.n(l),s=t(870);const i=/\$[^$\n]+?\$/,r=/^\$([^$\n]+?)\$/,c=/^\s{0,3}\$\$((?:[^$\n]|\n[^$\n])+?)\n{0,1}\$\$/,h={walkTokens(e){"blockMath"!==e.lang&&"inlineMath"!==e.lang||(e.type="html")},extensions:[{name:"blockMath",level:"block",tokenizer(e){const n=c.exec(e);if(null!==n)return{type:"code",raw:n[0],lang:"blockMath",text:n[1]}}},{name:"inlineMath",level:"inline",start:e=>e.search(i),tokenizer(e){const n=r.exec(e);if(null!==n)return{type:"code",raw:n[0],lang:"inlineMath",text:n[1]}}}]},o=e=>(s.TU.setOptions({highlight:(n,t,l)=>{"blockMath"===t||"inlineMath"===t?e("blockMath"===t,n,l):l(null,t?a()(n):void 0)},breaks:!0,smartLists:!0,smartypants:!0}),s.TU.use(h),e=>new Promise(((n,t)=>(0,s.TU)(e,((e,l)=>{e?t(e):n(l)}))))),k=o(((e,n,l)=>{Promise.all([t.e(551),t.e(821)]).then(t.bind(t,821)).then((t=>{let{KaTeX:a}=t;l(null,a(e,n))})).catch((()=>{l(null,'<span class="vtex">KaTeX renderer load failed, but you can still reply.</span>')}))}))}}]);
//# sourceMappingURL=478.Waline.min.js.map